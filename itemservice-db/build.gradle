plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//JdbcTemplate 추가
//	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	//H2 데이터베이스 추가
	runtimeOnly 'com.h2database:h2'
	//MyBatis 스프링 부트 3.0 추가
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	//JPA, 스프링 데이터 JPA 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// ✅ QueryDSL 추가 (Spring Boot 3.x + JPA + Jakarta 호환)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'


	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 큐 클래스 생성
def generated = layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main")

tasks.withType(JavaCompile).configureEach {
	// ✅ 최신 Gradle 방식으로 Q클래스 생성 경로 지정
	options.compilerArgs += [
			"-Aquerydsl.generatedSourcesDir=${generated.get().asFile}"
	]
}

sourceSets {
	main {
		java {
			srcDirs += generated
		}
	}
}